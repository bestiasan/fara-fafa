[tool.poetry]
name = "Curioz backend"
version = "0.1.1"
description = "Curioz backend API + admin module."
authors = ["s.opozda"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1.4"
# psycopg = { extras = ["binary"], version = "^3.2." }
uvicorn = "^0.29.0"
# sqids = "^0.4.1"
# django-cors-headers = "^4.4.0"
# whitenoise = "^6.7.0"
# django-json-widget = "^2.0.1"
psycopg = {extras = ["binary"], version = "^3.2.3"}


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
assertpy = "^1.1"
pytest-django = "^4.8.0"
pytest-env = "^1.1.3"
ruff = "^0.8.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
env = ["DJANGO_SETTINGS_MODULE=curioz_project.settings.test"]
django_debug_mode = true
log_cli = true
log_cli_level = "DEBUG"

# log_cli_format = "%(asctime)s [%(levelname)7s] <%(name)s> %(pathname)s:%(lineno)s %(message)s"
# log_cli_date_format = "%Y%m%d %H:%M:%S"
# python_files = "tests.py test_*.py *_tests.py"
addopts = "--no-migrations --create-db"

# addopts = "--cov=. --cov-config=/app/pyproject.toml --cov-report html:app/htmlcov --cov-report term-missing"
pythonpath = ['src', '/app']

[tool.coverage.run]
branch = true
omit = ["*/_tests/*", "*/tests/*", "*/conftest.py"]


[tool.ruff]
exclude = ["migrations"]
fix = true
line-length = 100

[tool.ruff.format]
preview = true
quote-style = "double"
docstring-code-format = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "FA100",
    "FA102",
    "CPY001",
    "D415",
    "D400",
    "D104",
    "D103",
    "D100",
    "D106",
    "D203",
    "D213",
    "DOC201",
    "DOC501"
]